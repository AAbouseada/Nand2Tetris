// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
	DMux8Way(in=load,sel=address[3..5],a=irg0,b=irg1,c=irg2,d=irg3,e=irg4,f=irg5,g=irg6,h=irg7);
	RAM8(in=in,load=irg0,address=address[0..2],out=rg0);
    	RAM8(in=in,load=irg1,address=address[0..2],out=rg1);
	RAM8(in=in,load=irg2,address=address[0..2],out=rg2);
	RAM8(in=in,load=irg3,address=address[0..2],out=rg3);
	RAM8(in=in,load=irg4,address=address[0..2],out=rg4);
	RAM8(in=in,load=irg5,address=address[0..2],out=rg5);
	RAM8(in=in,load=irg6,address=address[0..2],out=rg6);
	RAM8(in=in,load=irg7,address=address[0..2],out=rg7);
	Mux8Way16(a=rg0,b=rg1,c=rg2,d=rg3,e=rg4,f=rg5,g=rg6,h=rg7,sel=address[3..5],out=out);
}
